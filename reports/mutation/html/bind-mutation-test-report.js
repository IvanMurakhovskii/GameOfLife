document.querySelector('mutation-test-report-app').report = {"files":{"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\modules\\Authentification\\saga.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":2,"line":15},"start":{"column":30,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Login saga login saga"},{"id":"1","location":{"end":{"column":16,"line":8},"start":{"column":12,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: Login saga login saga"},{"id":"2","location":{"end":{"column":16,"line":8},"start":{"column":12,"line":8}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed","description":"Killed by: Login saga login saga"},{"id":"3","location":{"end":{"column":6,"line":14},"start":{"column":18,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"}],"source":"import { logIn, logOut } from \"@/utils\";\r\nimport { take, select, call } from \"redux-saga/effects\"\r\nimport { getUsername } from \"./selector\";\r\nimport { actions } from \"./slice\";\r\n\r\n\r\nexport function* loginSaga() {\r\n    while (true) {\r\n        yield take(actions.login.type);\r\n        const username = yield select(getUsername);\r\n        yield call(logIn, username);\r\n        yield take(actions.logout.type);\r\n        yield call(logOut);\r\n    }\r\n}"},"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\modules\\Authentification\\slice.ts":{"language":"typescript","mutants":[{"id":"6","location":{"end":{"column":17,"line":8},"start":{"column":15,"line":8}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"5","location":{"end":{"column":2,"line":9},"start":{"column":41,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"7","location":{"end":{"column":2,"line":25},"start":{"column":26,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\@reduxjs\\toolkit\\src\\createSlice.ts:216:11)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Authentification\\slice.ts:63:14)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at Runtime.requireModuleOrMock (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:849:21)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Authentification\\saga.test.ts:3:1)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at jasmine2 (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-jasmine2\\build\\index.js:230:13)\n    at runTestInternal (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:375:22)\n    at runTest (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:455:34), undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\@reduxjs\\toolkit\\src\\createSlice.ts:216:11)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Authentification\\slice.ts:63:14)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at Runtime.requireModuleOrMock (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:849:21)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Authentification\\slice.test.ts:2:1)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at jasmine2 (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-jasmine2\\build\\index.js:230:13)\n    at runTestInternal (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:375:22)\n    at runTest (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:455:34)"},{"id":"9","location":{"end":{"column":6,"line":24},"start":{"column":15,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Login saga login saga"},{"id":"8","location":{"end":{"column":18,"line":12},"start":{"column":11,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError","description":"Error message: undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\@reduxjs\\toolkit\\src\\createSlice.ts:216:11)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Authentification\\slice.ts:63:14)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at Runtime.requireModuleOrMock (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:849:21)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Authentification\\saga.test.ts:3:1)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at jasmine2 (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-jasmine2\\build\\index.js:230:13)\n    at runTestInternal (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:375:22)\n    at runTest (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:455:34), undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\@reduxjs\\toolkit\\src\\createSlice.ts:216:11)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Authentification\\slice.ts:63:14)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at Runtime.requireModuleOrMock (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:849:21)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Authentification\\slice.test.ts:2:1)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at jasmine2 (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-jasmine2\\build\\index.js:230:13)\n    at runTestInternal (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:375:22)\n    at runTest (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:455:34)"},{"id":"10","location":{"end":{"column":10,"line":17},"start":{"column":58,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Login slice action should fill username to state"},{"id":"11","location":{"end":{"column":10,"line":20},"start":{"column":28,"line":18}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Login slice action should logout user"},{"id":"12","location":{"end":{"column":32,"line":19},"start":{"column":30,"line":19}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed","description":"Killed by: Login slice action should logout user"},{"id":"13","location":{"end":{"column":10,"line":23},"start":{"column":64,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ntype LoginState = {\r\n    username: string,\r\n}\r\n\r\nexport const initialState: LoginState = {\r\n    username: \"\",\r\n};\r\n\r\nconst game = createSlice({\r\n    name: \"login\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        login: (state, action: PayloadAction<string>) => {\r\n            state.username = action.payload;\r\n        },\r\n        logout: (state) => {\r\n            state.username = \"\";\r\n        },\r\n        setUsername: (state, action: PayloadAction<string>) => {\r\n            state.username = action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { actions, reducer } = game;\r\n"},"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\modules\\Authentification\\selector.ts":{"language":"typescript","mutants":[{"id":"4","location":{"end":{"column":91,"line":3},"start":{"column":28,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: Login selector getUsername should return name"}],"source":"import { StoreState } from \"@/store/store\";\r\n\r\nexport const getUsername = ({ loginReducer }: StoreState): string => loginReducer.username;"},"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\modules\\Game\\saga.ts":{"language":"typescript","mutants":[{"id":"14","location":{"end":{"column":2,"line":12},"start":{"column":30,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Game saga start game"},{"id":"15","location":{"end":{"column":16,"line":7},"start":{"column":12,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: Game saga start game"},{"id":"16","location":{"end":{"column":16,"line":7},"start":{"column":12,"line":7}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed","description":"Killed by: Game saga start game"},{"id":"18","location":{"end":{"column":2,"line":21},"start":{"column":29,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Game saga game saga"},{"id":"19","location":{"end":{"column":16,"line":15},"start":{"column":12,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: Game saga game saga"},{"id":"20","location":{"end":{"column":16,"line":15},"start":{"column":12,"line":15}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed","description":"Killed by: Game saga game saga"},{"id":"17","location":{"end":{"column":6,"line":11},"start":{"column":18,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"21","location":{"end":{"column":6,"line":20},"start":{"column":18,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"}],"source":"import { take, fork, delay, put, cancel, select } from \"redux-saga/effects\"\r\nimport { getSpeed } from \"./selector\";\r\nimport { actions } from \"./slice\";\r\n\r\n\r\nexport function* startGame() {\r\n    while (true) {\r\n        const speed: number = yield select(getSpeed);\r\n        yield put(actions.update());\r\n        yield delay(speed);\r\n    }\r\n}\r\n\r\nexport function* gameSaga() {\r\n    while (true) {\r\n        yield take(actions.start.type);\r\n        const task = yield fork(startGame);\r\n        yield take(actions.stop.type);\r\n        yield cancel(task);\r\n    }\r\n}"},"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\modules\\Game\\selector.ts":{"language":"typescript","mutants":[{"id":"22","location":{"end":{"column":86,"line":4},"start":{"column":25,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: selectors getBoard should return speed"},{"id":"23","location":{"end":{"column":83,"line":6},"start":{"column":25,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: selectors getSpeed should return speed"}],"source":"import { StoreState } from \"@/store/store\";\r\nimport { BoardType } from \"@/types\";\r\n\r\nexport const getBoard = ({ gameReducer }: StoreState): BoardType => gameReducer.board;\r\n\r\nexport const getSpeed = ({ gameReducer }: StoreState): number => gameReducer.speed;"},"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\modules\\Game\\slice.ts":{"language":"typescript","mutants":[{"id":"24","location":{"end":{"column":2,"line":18},"start":{"column":40,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"25","location":{"end":{"column":23,"line":14},"start":{"column":12,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"new Array([])","status":"Survived"},{"id":"26","location":{"end":{"column":21,"line":15},"start":{"column":16,"line":15}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"27","location":{"end":{"column":2,"line":56},"start":{"column":26,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\@reduxjs\\toolkit\\src\\createSlice.ts:216:11)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Game\\slice.ts:72:14)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at Runtime.requireModuleOrMock (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:849:21)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Game\\saga.test.ts:4:1)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at jasmine2 (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-jasmine2\\build\\index.js:230:13)\n    at runTestInternal (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:375:22)\n    at runTest (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:455:34), undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\@reduxjs\\toolkit\\src\\createSlice.ts:216:11)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Game\\slice.ts:72:14)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at Runtime.requireModuleOrMock (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:849:21)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Game\\slice.test.ts:4:1)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at jasmine2 (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-jasmine2\\build\\index.js:230:13)\n    at runTestInternal (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:375:22)\n    at runTest (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:455:34)"},{"id":"28","location":{"end":{"column":17,"line":21},"start":{"column":11,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError","description":"Error message: undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\@reduxjs\\toolkit\\src\\createSlice.ts:216:11)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Game\\slice.ts:72:14)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at Runtime.requireModuleOrMock (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:849:21)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Game\\saga.test.ts:4:1)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at jasmine2 (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-jasmine2\\build\\index.js:230:13)\n    at runTestInternal (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:375:22)\n    at runTest (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:455:34), undefined`name` is a required option for createSlice Error: `name` is a required option for createSlice\n    at createSlice (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\@reduxjs\\toolkit\\src\\createSlice.ts:216:11)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Game\\slice.ts:72:14)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at Runtime.requireModuleOrMock (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:849:21)\n    at Object.<anonymous> (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\.stryker-tmp\\sandbox8316736\\src\\modules\\Game\\slice.test.ts:4:1)\n    at Runtime._execModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:1217:24)\n    at Runtime._loadModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:828:12)\n    at Runtime.requireModule (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runtime\\build\\index.js:679:10)\n    at jasmine2 (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-jasmine2\\build\\index.js:230:13)\n    at runTestInternal (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:375:22)\n    at runTest (C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\node_modules\\jest-runner\\build\\runTest.js:455:34)"},{"id":"29","location":{"end":{"column":6,"line":55},"start":{"column":15,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Game saga start game"},{"id":"30","location":{"end":{"column":10,"line":28},"start":{"column":73,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should meke cell alive"},{"id":"31","location":{"end":{"column":44,"line":25},"start":{"column":30,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: game slice action should meke cell alive"},{"id":"32","location":{"end":{"column":37,"line":27},"start":{"column":26,"line":27}},"mutatorName":"BooleanLiteral","replacement":"cell.alive","status":"Killed","description":"Killed by: game slice action should meke cell alive"},{"id":"33","location":{"end":{"column":10,"line":31},"start":{"column":39,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"34","location":{"end":{"column":40,"line":30},"start":{"column":36,"line":30}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"35","location":{"end":{"column":10,"line":34},"start":{"column":27,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should set isRunning true"},{"id":"36","location":{"end":{"column":35,"line":33},"start":{"column":31,"line":33}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed","description":"Killed by: game slice action should set isRunning true"},{"id":"37","location":{"end":{"column":10,"line":37},"start":{"column":28,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"38","location":{"end":{"column":10,"line":40},"start":{"column":26,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"39","location":{"end":{"column":36,"line":39},"start":{"column":31,"line":39}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed","description":"Killed by: game slice action should set isRunning false"},{"id":"40","location":{"end":{"column":10,"line":43},"start":{"column":27,"line":41}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill board where all cell alive = false"},{"id":"41","location":{"end":{"column":41,"line":42},"start":{"column":36,"line":42}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed","description":"Killed by: game slice action should fill board where all cell alive = false"},{"id":"42","location":{"end":{"column":10,"line":47},"start":{"column":66,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill population"},{"id":"43","location":{"end":{"column":53,"line":46},"start":{"column":33,"line":46}},"mutatorName":"ArithmeticOperator","replacement":"action.payload * 100","status":"Killed","description":"Killed by: game slice action should fill population"},{"id":"44","location":{"end":{"column":10,"line":50},"start":{"column":61,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill speed to state"},{"id":"45","location":{"end":{"column":55,"line":49},"start":{"column":28,"line":49}},"mutatorName":"ArithmeticOperator","replacement":"(100 - action.payload) / 10","status":"Killed","description":"Killed by: game slice action should fill speed to state"},{"id":"46","location":{"end":{"column":49,"line":49},"start":{"column":29,"line":49}},"mutatorName":"ArithmeticOperator","replacement":"100 + action.payload","status":"Killed","description":"Killed by: game slice action should fill speed to state"},{"id":"47","location":{"end":{"column":10,"line":54},"start":{"column":66,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"48","location":{"end":{"column":41,"line":52},"start":{"column":36,"line":52}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed","description":"Killed by: game slice action should fill pattern in board"}],"source":"import { BoardType, Coordinate } from \"@/types\";\r\nimport { makeGrid } from \"@/utils\";\r\nimport { insertPatterntToBoard, updateGameField } from \"@/utils/GameUtil\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ntype GameState = {\r\n    board: BoardType,\r\n    isRunning: boolean,\r\n    population: number,\r\n    speed: number\r\n}\r\n\r\nexport const initialState: GameState = {\r\n    board: new Array(),\r\n    isRunning: false,\r\n    population: 0.1,\r\n    speed: 700\r\n};\r\n\r\nconst game = createSlice({\r\n    name: \"game\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        toggleAlive: (state, { payload }: PayloadAction<Coordinate>) => {\r\n            const { x, y } = { ...payload };\r\n            let cell = state.board[x][y];\r\n            cell.alive = !cell.alive;\r\n        },\r\n        fillInBoardRandom: (state) => {\r\n            state.board = makeGrid(true, state.population);\r\n        },\r\n        start: (state) => {\r\n            state.isRunning = true;\r\n        },\r\n        update: (state) => {\r\n            state.board = updateGameField(state.board);\r\n        },\r\n        stop: (state) => {\r\n            state.isRunning = false;\r\n        },\r\n        clear: (state) => {\r\n            state.board = makeGrid(false);\r\n        },\r\n\r\n        setPopulation: (state, action: PayloadAction<number>) => {\r\n            state.population = (action.payload / 100);\r\n        },\r\n        setSpeed: (state, action: PayloadAction<number>) => {\r\n            state.speed = ((100 - action.payload) * 10);\r\n        },\r\n        insertPattern: (state, action: PayloadAction<number>) => {\r\n            state.board = makeGrid(false);\r\n            insertPatterntToBoard(state.board, action.payload)\r\n        },\r\n    }\r\n});\r\n\r\nexport const { actions, reducer } = game;\r\n"},"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\store\\store.ts":{"language":"typescript","mutants":[{"id":"50","location":{"end":{"column":2,"line":19},"start":{"column":22,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"51","location":{"end":{"column":2,"line":26},"start":{"column":37,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"52","location":{"end":{"column":33,"line":25},"start":{"column":17,"line":25}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"49","location":{"end":{"column":2,"line":12},"start":{"column":33,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { reducer as gameReducer } from '@/modules/Game/slice'\r\nimport { gameSaga } from \"@/modules/Game/saga\";\r\nimport { fork } from \"redux-saga/effects\";\r\nimport { reducer as loginReducer } from '@/modules/Authentification/slice';\r\nimport { loginSaga } from \"@/modules/Authentification/saga\";\r\n\r\nconst reducer = combineReducers({\r\n    gameReducer,\r\n    loginReducer\r\n});\r\n\r\nexport type StoreState = ReturnType<typeof reducer>;\r\n\r\nfunction* rootSaga() {\r\n    yield fork(gameSaga);\r\n    yield fork(loginSaga);\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = configureStore({\r\n    reducer,\r\n    middleware: [sagaMiddleware]\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\n\r\n"},"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\utils\\GameUtil.ts":{"language":"typescript","mutants":[{"id":"53","location":{"end":{"column":40,"line":4},"start":{"column":35,"line":4}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed","description":"Killed by: game slice action should fill board where all cell alive = false"},{"id":"54","location":{"end":{"column":2,"line":22},"start":{"column":112,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill board random values"},{"id":"55","location":{"end":{"column":27,"line":5},"start":{"column":16,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"new Array([])","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"56","location":{"end":{"column":31,"line":6},"start":{"column":21,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"58","location":{"end":{"column":31,"line":6},"start":{"column":21,"line":6}},"mutatorName":"EqualityOperator","replacement":"i >= height","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"57","location":{"end":{"column":31,"line":6},"start":{"column":21,"line":6}},"mutatorName":"EqualityOperator","replacement":"i <= height","status":"Survived"},{"id":"60","location":{"end":{"column":6,"line":20},"start":{"column":38,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"62","location":{"end":{"column":34,"line":8},"start":{"column":25,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"61","location":{"end":{"column":30,"line":7},"start":{"column":19,"line":7}},"mutatorName":"ArrayDeclaration","replacement":"new Array([])","status":"Killed","description":"Killed by: game slice action should meke cell alive"},{"id":"64","location":{"end":{"column":34,"line":8},"start":{"column":25,"line":8}},"mutatorName":"EqualityOperator","replacement":"j >= width","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"67","location":{"end":{"column":23,"line":10},"start":{"column":17,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: game slice action should fill board where all cell alive = false"},{"id":"68","location":{"end":{"column":23,"line":10},"start":{"column":17,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"63","location":{"end":{"column":34,"line":8},"start":{"column":25,"line":8}},"mutatorName":"EqualityOperator","replacement":"j <= width","status":"Survived"},{"id":"69","location":{"end":{"column":14,"line":12},"start":{"column":25,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"66","location":{"end":{"column":10,"line":18},"start":{"column":41,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"72","location":{"end":{"column":50,"line":11},"start":{"column":24,"line":11}},"mutatorName":"EqualityOperator","replacement":"Math.random() <= population","status":"Survived"},{"id":"70","location":{"end":{"column":50,"line":11},"start":{"column":24,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"74","location":{"end":{"column":14,"line":14},"start":{"column":20,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"71","location":{"end":{"column":50,"line":11},"start":{"column":24,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"59","location":{"end":{"column":36,"line":6},"start":{"column":33,"line":6}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Timeout"},{"id":"65","location":{"end":{"column":39,"line":8},"start":{"column":36,"line":8}},"mutatorName":"UpdateOperator","replacement":"j--","status":"Timeout"},{"id":"75","location":{"end":{"column":29,"line":13},"start":{"column":24,"line":13}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed","description":"Killed by: game slice action should meke cell alive"},{"id":"76","location":{"end":{"column":14,"line":17},"start":{"column":22,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"73","location":{"end":{"column":50,"line":11},"start":{"column":24,"line":11}},"mutatorName":"EqualityOperator","replacement":"Math.random() >= population","status":"Timeout"},{"id":"77","location":{"end":{"column":2,"line":50},"start":{"column":79,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"81","location":{"end":{"column":27,"line":31},"start":{"column":18,"line":31}},"mutatorName":"EqualityOperator","replacement":"x - 1 <= 0","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"82","location":{"end":{"column":27,"line":31},"start":{"column":18,"line":31}},"mutatorName":"EqualityOperator","replacement":"x - 1 >= 0","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"84","location":{"end":{"column":41,"line":31},"start":{"column":31,"line":31}},"mutatorName":"ArithmeticOperator","replacement":"height + 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"78","location":{"end":{"column":39,"line":27},"start":{"column":22,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"79","location":{"end":{"column":27,"line":31},"start":{"column":18,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"80","location":{"end":{"column":27,"line":31},"start":{"column":18,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"85","location":{"end":{"column":50,"line":31},"start":{"column":45,"line":31}},"mutatorName":"ArithmeticOperator","replacement":"x + 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"86","location":{"end":{"column":38,"line":32},"start":{"column":22,"line":32}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"83","location":{"end":{"column":23,"line":31},"start":{"column":18,"line":31}},"mutatorName":"ArithmeticOperator","replacement":"x + 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"87","location":{"end":{"column":38,"line":32},"start":{"column":22,"line":32}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"88","location":{"end":{"column":38,"line":32},"start":{"column":22,"line":32}},"mutatorName":"EqualityOperator","replacement":"x + 1 !== height","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"89","location":{"end":{"column":27,"line":32},"start":{"column":22,"line":32}},"mutatorName":"ArithmeticOperator","replacement":"x - 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"90","location":{"end":{"column":51,"line":32},"start":{"column":46,"line":32}},"mutatorName":"ArithmeticOperator","replacement":"x - 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"91","location":{"end":{"column":31,"line":33},"start":{"column":22,"line":33}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"92","location":{"end":{"column":31,"line":33},"start":{"column":22,"line":33}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"93","location":{"end":{"column":31,"line":33},"start":{"column":22,"line":33}},"mutatorName":"EqualityOperator","replacement":"y - 1 <= 0","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"94","location":{"end":{"column":31,"line":33},"start":{"column":22,"line":33}},"mutatorName":"EqualityOperator","replacement":"y - 1 >= 0","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"95","location":{"end":{"column":27,"line":33},"start":{"column":22,"line":33}},"mutatorName":"ArithmeticOperator","replacement":"y + 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"96","location":{"end":{"column":44,"line":33},"start":{"column":35,"line":33}},"mutatorName":"ArithmeticOperator","replacement":"width + 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"97","location":{"end":{"column":53,"line":33},"start":{"column":48,"line":33}},"mutatorName":"ArithmeticOperator","replacement":"y + 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"99","location":{"end":{"column":39,"line":34},"start":{"column":24,"line":34}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"98","location":{"end":{"column":39,"line":34},"start":{"column":24,"line":34}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"100","location":{"end":{"column":39,"line":34},"start":{"column":24,"line":34}},"mutatorName":"EqualityOperator","replacement":"y + 1 !== width","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"101","location":{"end":{"column":29,"line":34},"start":{"column":24,"line":34}},"mutatorName":"ArithmeticOperator","replacement":"y - 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"102","location":{"end":{"column":52,"line":34},"start":{"column":47,"line":34}},"mutatorName":"ArithmeticOperator","replacement":"y - 1","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"103","location":{"end":{"column":6,"line":38},"start":{"column":68,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"104","location":{"end":{"column":2,"line":80},"start":{"column":65,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"105","location":{"end":{"column":33,"line":56},"start":{"column":22,"line":56}},"mutatorName":"ArrayDeclaration","replacement":"new Array([])","status":"Survived"},{"id":"106","location":{"end":{"column":31,"line":57},"start":{"column":21,"line":57}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"107","location":{"end":{"column":31,"line":57},"start":{"column":21,"line":57}},"mutatorName":"EqualityOperator","replacement":"i <= height","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"108","location":{"end":{"column":31,"line":57},"start":{"column":21,"line":57}},"mutatorName":"EqualityOperator","replacement":"i >= height","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"109","location":{"end":{"column":36,"line":57},"start":{"column":33,"line":57}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"110","location":{"end":{"column":6,"line":78},"start":{"column":38,"line":57}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"111","location":{"end":{"column":42,"line":58},"start":{"column":21,"line":58}},"mutatorName":"ArrayDeclaration","replacement":"new Array([])","status":"Survived"},{"id":"112","location":{"end":{"column":34,"line":60},"start":{"column":25,"line":60}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"113","location":{"end":{"column":34,"line":60},"start":{"column":25,"line":60}},"mutatorName":"EqualityOperator","replacement":"j <= width","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"114","location":{"end":{"column":34,"line":60},"start":{"column":25,"line":60}},"mutatorName":"EqualityOperator","replacement":"j >= width","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"116","location":{"end":{"column":10,"line":76},"start":{"column":41,"line":60}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"115","location":{"end":{"column":39,"line":60},"start":{"column":36,"line":60}},"mutatorName":"UpdateOperator","replacement":"j--","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"117","location":{"end":{"column":79,"line":62},"start":{"column":65,"line":62}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"118","location":{"end":{"column":24,"line":63},"start":{"column":17,"line":63}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"119","location":{"end":{"column":24,"line":63},"start":{"column":17,"line":63}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"120","location":{"end":{"column":14,"line":69},"start":{"column":26,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"121","location":{"end":{"column":71,"line":64},"start":{"column":21,"line":64}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"122","location":{"end":{"column":71,"line":64},"start":{"column":21,"line":64}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"123","location":{"end":{"column":71,"line":64},"start":{"column":21,"line":64}},"mutatorName":"LogicalOperator","replacement":"aliveNeighboreCount < 2 && aliveNeighboreCount > 3","status":"Survived"},{"id":"124","location":{"end":{"column":44,"line":64},"start":{"column":21,"line":64}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"125","location":{"end":{"column":44,"line":64},"start":{"column":21,"line":64}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"126","location":{"end":{"column":44,"line":64},"start":{"column":21,"line":64}},"mutatorName":"EqualityOperator","replacement":"aliveNeighboreCount <= 2","status":"Survived"},{"id":"127","location":{"end":{"column":44,"line":64},"start":{"column":21,"line":64}},"mutatorName":"EqualityOperator","replacement":"aliveNeighboreCount >= 2","status":"Survived"},{"id":"128","location":{"end":{"column":71,"line":64},"start":{"column":48,"line":64}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"129","location":{"end":{"column":71,"line":64},"start":{"column":48,"line":64}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"130","location":{"end":{"column":71,"line":64},"start":{"column":48,"line":64}},"mutatorName":"EqualityOperator","replacement":"aliveNeighboreCount >= 3","status":"Survived"},{"id":"131","location":{"end":{"column":71,"line":64},"start":{"column":48,"line":64}},"mutatorName":"EqualityOperator","replacement":"aliveNeighboreCount <= 3","status":"Survived"},{"id":"132","location":{"end":{"column":18,"line":66},"start":{"column":73,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"133","location":{"end":{"column":46,"line":65},"start":{"column":30,"line":65}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"134","location":{"end":{"column":44,"line":65},"start":{"column":39,"line":65}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"135","location":{"end":{"column":18,"line":68},"start":{"column":24,"line":66}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"136","location":{"end":{"column":45,"line":67},"start":{"column":30,"line":67}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"137","location":{"end":{"column":43,"line":67},"start":{"column":39,"line":67}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"138","location":{"end":{"column":14,"line":75},"start":{"column":20,"line":69}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"139","location":{"end":{"column":45,"line":70},"start":{"column":21,"line":70}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"140","location":{"end":{"column":45,"line":70},"start":{"column":21,"line":70}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"141","location":{"end":{"column":45,"line":70},"start":{"column":21,"line":70}},"mutatorName":"EqualityOperator","replacement":"aliveNeighboreCount != 3","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"142","location":{"end":{"column":18,"line":72},"start":{"column":47,"line":70}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"143","location":{"end":{"column":45,"line":71},"start":{"column":30,"line":71}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"144","location":{"end":{"column":43,"line":71},"start":{"column":39,"line":71}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed","description":"Killed by: game slice action should update board"},{"id":"145","location":{"end":{"column":18,"line":74},"start":{"column":24,"line":72}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"146","location":{"end":{"column":46,"line":73},"start":{"column":30,"line":73}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"147","location":{"end":{"column":44,"line":73},"start":{"column":39,"line":73}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"148","location":{"end":{"column":2,"line":96},"start":{"column":79,"line":82}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"149","location":{"end":{"column":58,"line":85},"start":{"column":34,"line":85}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"150","location":{"end":{"column":58,"line":85},"start":{"column":41,"line":85}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"151","location":{"end":{"column":58,"line":85},"start":{"column":41,"line":85}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"153","location":{"end":{"column":29,"line":88},"start":{"column":9,"line":88}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"152","location":{"end":{"column":58,"line":85},"start":{"column":41,"line":85}},"mutatorName":"EqualityOperator","replacement":"p.id != patternId","status":"Survived"},{"id":"154","location":{"end":{"column":29,"line":88},"start":{"column":9,"line":88}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"156","location":{"end":{"column":6,"line":95},"start":{"column":31,"line":88}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"157","location":{"end":{"column":38,"line":89},"start":{"column":29,"line":89}},"mutatorName":"ArithmeticOperator","replacement":"width * 2","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"155","location":{"end":{"column":29,"line":88},"start":{"column":9,"line":88}},"mutatorName":"EqualityOperator","replacement":"points === undefined","status":"Survived"},{"id":"158","location":{"end":{"column":39,"line":90},"start":{"column":29,"line":90}},"mutatorName":"ArithmeticOperator","replacement":"height * 2","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"159","location":{"end":{"column":10,"line":94},"start":{"column":35,"line":92}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"160","location":{"end":{"column":30,"line":93},"start":{"column":19,"line":93}},"mutatorName":"ArithmeticOperator","replacement":"x - point.x","status":"Survived"},{"id":"161","location":{"end":{"column":43,"line":93},"start":{"column":32,"line":93}},"mutatorName":"ArithmeticOperator","replacement":"y - point.y","status":"Survived"},{"id":"162","location":{"end":{"column":57,"line":93},"start":{"column":53,"line":93}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"}],"source":"import { BoardType, CellType, Coordinate } from \"@/types\";\r\nimport { patterns } from \"./PatternUtil\";\r\n\r\nexport const makeGrid = (random = false, population = 0.1, height = 30, width = 30): Array<Array<CellType>> => {\r\n    let grid = new Array();\r\n    for (var i = 0; i < height; i++) {\r\n        var row = new Array();\r\n        for (var j = 0; j < width; j++) {\r\n            let cell;\r\n            if (random) {\r\n                cell = Math.random() < population;\r\n            } else {\r\n                cell = false;\r\n            }\r\n            row.push({\r\n                alive: cell\r\n            });\r\n        }\r\n        grid.push(row);\r\n    }\r\n    return grid;\r\n};\r\n\r\nconst _getAliveNeighboreCount = (coordinate: Coordinate, board: BoardType) => {\r\n    let neightboreCount = 0;\r\n\r\n    const { x, y } = { ...coordinate };\r\n    const height = board.length;\r\n    const width = board[0].length\r\n\r\n    let topRow = x - 1 < 0 ? (height - 1) : x - 1;\r\n    let bottomRow = (x + 1 === height) ? 0 : x + 1;\r\n    let leftColumn = y - 1 < 0 ? (width - 1) : y - 1;\r\n    let rightColumn = (y + 1 === width) ? 0 : y + 1;\r\n\r\n    const getNumberFromBoolean = (x: number, y: number): number => {\r\n        return Number(board[x][y].alive);\r\n    }\r\n\r\n    neightboreCount += getNumberFromBoolean(topRow, leftColumn);\r\n    neightboreCount += getNumberFromBoolean(topRow, y);\r\n    neightboreCount += getNumberFromBoolean(topRow, rightColumn);\r\n    neightboreCount += getNumberFromBoolean(x, leftColumn);\r\n    neightboreCount += getNumberFromBoolean(x, rightColumn);\r\n    neightboreCount += getNumberFromBoolean(bottomRow, leftColumn);\r\n    neightboreCount += getNumberFromBoolean(bottomRow, y);\r\n    neightboreCount += getNumberFromBoolean(bottomRow, rightColumn);\r\n\r\n    return neightboreCount;\r\n}\r\n\r\nexport const updateGameField = (board: BoardType): BoardType => {\r\n    const height = board.length;\r\n    const width = board[0].length;\r\n\r\n    const newBoard = new Array();\r\n    for (let i = 0; i < height; i++) {\r\n        const row = new Array<CellType>();\r\n\r\n        for (let j = 0; j < width; j++) {\r\n            const isAlive = board[i][j].alive;\r\n            const aliveNeighboreCount = _getAliveNeighboreCount({ x: i, y: j }, board);\r\n            if (isAlive) {\r\n                if (aliveNeighboreCount < 2 || aliveNeighboreCount > 3) {\r\n                    row.push({ alive: false });\r\n                } else {\r\n                    row.push({ alive: true });\r\n                }\r\n            } else {\r\n                if (aliveNeighboreCount == 3) {\r\n                    row.push({ alive: true });\r\n                } else {\r\n                    row.push({ alive: false });\r\n                }\r\n            }\r\n        }\r\n        newBoard.push(row);\r\n    }\r\n    return newBoard;\r\n}\r\n\r\nexport const insertPatterntToBoard = (board: BoardType, patternId: number) => {\r\n    const height = board.length;\r\n    const width = board[0].length;\r\n    const points = patterns.find((p) => p.id == patternId)?.points;\r\n    console.log(points);\r\n\r\n    if (points !== undefined) {\r\n        const x = Math.ceil(width / 2);\r\n        const y = Math.ceil(height / 2);\r\n\r\n        points.forEach((point) => {\r\n            board[x + point.x][y + point.y].alive = true;\r\n        })\r\n    }\r\n}\r\n\r\n\r\n"},"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\utils\\LogInUtil.ts":{"language":"typescript","mutants":[{"id":"163","location":{"end":{"column":2,"line":3},"start":{"column":50,"line":1}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"164","location":{"end":{"column":36,"line":2},"start":{"column":26,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"165","location":{"end":{"column":2,"line":7},"start":{"column":35,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"166","location":{"end":{"column":39,"line":6},"start":{"column":29,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"167","location":{"end":{"column":2,"line":12},"start":{"column":46,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"168","location":{"end":{"column":53,"line":10},"start":{"column":43,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"169","location":{"end":{"column":2,"line":17},"start":{"column":57,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"171","location":{"end":{"column":29,"line":16},"start":{"column":12,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"170","location":{"end":{"column":53,"line":15},"start":{"column":43,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"173","location":{"end":{"column":29,"line":16},"start":{"column":12,"line":16}},"mutatorName":"EqualityOperator","replacement":"username === null","status":"Survived"},{"id":"172","location":{"end":{"column":29,"line":16},"start":{"column":12,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"174","location":{"end":{"column":45,"line":16},"start":{"column":43,"line":16}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"export const logIn = async (username: string) => {\r\n    localStorage.setItem('username', username);\r\n}\r\n\r\nexport const logOut = async () => {\r\n    localStorage.removeItem(\"username\");\r\n}\r\n\r\nexport const isUserLoggedIn = (): boolean => {\r\n    const uesrname = localStorage.getItem('username');\r\n    return Boolean(uesrname);\r\n}\r\n\r\nexport const getUsername = async (): Promise<string> => {\r\n    const username = localStorage.getItem('username');\r\n    return username !== null ? username : '';\r\n}"},"C:\\Users\\ia.murakhovskii\\Documents\\react\\GameOfLife\\GameOfLife\\src\\utils\\PatternUtil.ts":{"language":"typescript","mutants":[{"id":"176","location":{"end":{"column":19,"line":7},"start":{"column":11,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"175","location":{"end":{"column":2,"line":9},"start":{"column":29,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"178","location":{"end":{"column":29,"line":8},"start":{"column":14,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"177","location":{"end":{"column":96,"line":8},"start":{"column":13,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"179","location":{"end":{"column":21,"line":8},"start":{"column":19,"line":8}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"180","location":{"end":{"column":45,"line":8},"start":{"column":31,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"181","location":{"end":{"column":63,"line":8},"start":{"column":47,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"182","location":{"end":{"column":61,"line":8},"start":{"column":58,"line":8}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"183","location":{"end":{"column":79,"line":8},"start":{"column":65,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"184","location":{"end":{"column":95,"line":8},"start":{"column":81,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: game slice action should fill pattern in board"},{"id":"185","location":{"end":{"column":2,"line":15},"start":{"column":31,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"186","location":{"end":{"column":21,"line":13},"start":{"column":11,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"187","location":{"end":{"column":130,"line":14},"start":{"column":13,"line":14}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"188","location":{"end":{"column":30,"line":14},"start":{"column":14,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"190","location":{"end":{"column":28,"line":14},"start":{"column":26,"line":14}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"189","location":{"end":{"column":21,"line":14},"start":{"column":19,"line":14}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"191","location":{"end":{"column":47,"line":14},"start":{"column":32,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"192","location":{"end":{"column":39,"line":14},"start":{"column":37,"line":14}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"193","location":{"end":{"column":64,"line":14},"start":{"column":49,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"194","location":{"end":{"column":62,"line":14},"start":{"column":60,"line":14}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"195","location":{"end":{"column":80,"line":14},"start":{"column":66,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"196","location":{"end":{"column":97,"line":14},"start":{"column":82,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"197","location":{"end":{"column":95,"line":14},"start":{"column":93,"line":14}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"198","location":{"end":{"column":113,"line":14},"start":{"column":99,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"199","location":{"end":{"column":129,"line":14},"start":{"column":115,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"200","location":{"end":{"column":2,"line":21},"start":{"column":32,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"201","location":{"end":{"column":22,"line":19},"start":{"column":11,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"202","location":{"end":{"column":166,"line":20},"start":{"column":13,"line":20}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"203","location":{"end":{"column":30,"line":20},"start":{"column":14,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"204","location":{"end":{"column":21,"line":20},"start":{"column":19,"line":20}},"mutatorName":"UnaryOperator","replacement":"+2","status":"Survived"},{"id":"205","location":{"end":{"column":28,"line":20},"start":{"column":26,"line":20}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"207","location":{"end":{"column":39,"line":20},"start":{"column":37,"line":20}},"mutatorName":"UnaryOperator","replacement":"+2","status":"Survived"},{"id":"206","location":{"end":{"column":47,"line":20},"start":{"column":32,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"208","location":{"end":{"column":64,"line":20},"start":{"column":49,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"209","location":{"end":{"column":56,"line":20},"start":{"column":54,"line":20}},"mutatorName":"UnaryOperator","replacement":"+2","status":"Survived"},{"id":"210","location":{"end":{"column":81,"line":20},"start":{"column":66,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"211","location":{"end":{"column":73,"line":20},"start":{"column":71,"line":20}},"mutatorName":"UnaryOperator","replacement":"+2","status":"Survived"},{"id":"212","location":{"end":{"column":99,"line":20},"start":{"column":83,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"213","location":{"end":{"column":90,"line":20},"start":{"column":88,"line":20}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"214","location":{"end":{"column":97,"line":20},"start":{"column":95,"line":20}},"mutatorName":"UnaryOperator","replacement":"+2","status":"Survived"},{"id":"216","location":{"end":{"column":108,"line":20},"start":{"column":106,"line":20}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"217","location":{"end":{"column":132,"line":20},"start":{"column":118,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"218","location":{"end":{"column":149,"line":20},"start":{"column":134,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"215","location":{"end":{"column":116,"line":20},"start":{"column":101,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"220","location":{"end":{"column":165,"line":20},"start":{"column":151,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"219","location":{"end":{"column":147,"line":20},"start":{"column":145,"line":20}},"mutatorName":"UnaryOperator","replacement":"+2","status":"Survived"},{"id":"224","location":{"end":{"column":30,"line":26},"start":{"column":14,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"225","location":{"end":{"column":28,"line":26},"start":{"column":25,"line":26}},"mutatorName":"UnaryOperator","replacement":"+4","status":"Survived"},{"id":"222","location":{"end":{"column":24,"line":25},"start":{"column":11,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"221","location":{"end":{"column":2,"line":27},"start":{"column":33,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"223","location":{"end":{"column":178,"line":26},"start":{"column":13,"line":26}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"226","location":{"end":{"column":47,"line":26},"start":{"column":32,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"227","location":{"end":{"column":45,"line":26},"start":{"column":43,"line":26}},"mutatorName":"UnaryOperator","replacement":"+3","status":"Survived"},{"id":"229","location":{"end":{"column":62,"line":26},"start":{"column":60,"line":26}},"mutatorName":"UnaryOperator","replacement":"+2","status":"Survived"},{"id":"230","location":{"end":{"column":81,"line":26},"start":{"column":66,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"231","location":{"end":{"column":79,"line":26},"start":{"column":77,"line":26}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"228","location":{"end":{"column":64,"line":26},"start":{"column":49,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"232","location":{"end":{"column":97,"line":26},"start":{"column":83,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"234","location":{"end":{"column":129,"line":26},"start":{"column":115,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"233","location":{"end":{"column":113,"line":26},"start":{"column":99,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"235","location":{"end":{"column":145,"line":26},"start":{"column":131,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"236","location":{"end":{"column":161,"line":26},"start":{"column":147,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"238","location":{"end":{"column":2,"line":31},"start":{"column":45,"line":29}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"237","location":{"end":{"column":177,"line":26},"start":{"column":163,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { PatternType } from \"@/types\";\r\n\r\n\r\n\r\nconst glider: PatternType = {\r\n    id: 1,\r\n    name: \"Glider\",\r\n    points: [{ x: -1, y: 0 }, { x: 0, y: 1 }, { x: 1, y: - 1 }, { x: 1, y: 0 }, { x: 1, y: 1 }]\r\n};\r\n\r\nconst exploder: PatternType = {\r\n    id: 2,\r\n    name: \"Exploder\",\r\n    points: [{ x: -1, y: -1 }, { x: -1, y: 1 }, { x: 0, y: -1 }, { x: 0, y: 1 }, { x: 1, y: -1 }, { x: 1, y: 1 }, { x: 2, y: 0 }]\r\n};\r\n\r\nconst spaceship: PatternType = {\r\n    id: 3,\r\n    name: \"Spaceship\",\r\n    points: [{ x: -2, y: -1 }, { x: -2, y: 0 }, { x: -2, y: 1 }, { x: -2, y: 2 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 0, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 1 }]\r\n};\r\n\r\nconst cellRows10: PatternType = {\r\n    id: 4,\r\n    name: \"10 Cell Row\",\r\n    points: [{ x: 0, y: - 4 }, { x: 0, y: -3 }, { x: 0, y: -2 }, { x: 0, y: -1 }, { x: 0, y: 0 }, { x: 0, y: 1 }, { x: 0, y: 2 }, { x: 0, y: 3 }, { x: 0, y: 4 }, { x: 0, y: 5 }]\r\n};\r\n\r\nexport const patterns: Array<PatternType> = [\r\n    glider, exploder, spaceship, cellRows10\r\n];"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};